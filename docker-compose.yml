

services:
  master:
    build: .
    container_name: master-node
    hostname: master
    stdin_open: true
    tty: true
    volumes:
      - ./data:/root/data
      - ./models:/root/models
    networks:
      - hpcnet
    restart: always
    healthcheck:
      test: ["CMD", "python3", "-c", "import os; exit(0 if os.path.exists('/tmp') else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  worker1:
    build: .
    container_name: worker-node-1
    hostname: worker1
    stdin_open: true
    tty: true
    volumes:
      - ./data:/root/data
      - ./models:/root/models
    networks:
      - hpcnet
    restart: always
    healthcheck:
      test: ["CMD", "python3", "-c", "import os; exit(0 if os.path.exists('/tmp') else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  worker2:
    build: .
    container_name: worker-node-2
    hostname: worker2
    stdin_open: true
    tty: true
    volumes:
      - ./data:/root/data
      - ./models:/root/models
    networks:
      - hpcnet
    restart: always
    healthcheck:
      test: ["CMD", "python3", "-c", "import os; exit(0 if os.path.exists('/tmp') else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - hpcnet
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    networks:
      - hpcnet
    restart: unless-stopped


networks:
  hpcnet:
    driver: bridge

